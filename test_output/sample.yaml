root:
  title: "Hexagonal Architecture: A Pattern for Sustainable Software Development"
  note: "An architectural pattern that allows applications to be driven by various sources and developed independently of runtime environments."
  children:
    core_concepts:
      title: "Core Concepts"
      note: "The foundational ideas that define the structure and operation of Hexagonal Architecture."
      children:
        ports:
          title: "Ports"
          note: "Interfaces that define the boundaries between the application and external systems."
          children:
            primary_ports:
              title: "Primary Ports"
              note: "Used by actors to drive the application."
            secondary_ports:
              title: "Secondary Ports"
              note: "Used by the application to communicate with external systems."
        adapters:
          title: "Adapters"
          note: "Components that implement the interfaces defined by ports, translating between the application and the external world."
          children:
            primary_adapters:
              title: "Primary Adapters"
              note: "Translate external inputs to application inputs."
            secondary_adapters:
              title: "Secondary Adapters"
              note: "Translate application outputs to external outputs."
        domain:
          title: "Domain"
          note: "Represents the core business logic of the application, isolated from external concerns."
    benefits:
      title: "Benefits"
      note: "Advantages of using Hexagonal Architecture in software development."
      children:
        testability:
          title: "Testability"
          note: "The domain can be tested in isolation without external dependencies."
        flexibility:
          title: "Flexibility"
          note: "Adapters can be swapped without changing the core logic."
        maintainability:
          title: "Maintainability"
          note: "Clear separation of concerns makes the code easier to maintain."
        technology_independence:
          title: "Technology Independence"
          note: "The domain is not tied to specific technologies."
    implementing_hexagonal_architecture:
      title: "Implementing Hexagonal Architecture"
      note: "Steps to effectively implement the Hexagonal Architecture pattern."
      children:
        define_domain_model:
          title: "Define Domain Model"
          note: "Start by defining the core business logic of the application."
        create_ports:
          title: "Create Ports"
          note: "Develop interfaces for interactions with external systems."
        implement_adapters:
          title: "Implement Adapters"
          note: "Build components that fulfill the defined interfaces."
        use_dependency_injection:
          title: "Use Dependency Injection"
          note: "Connect adapters with the application to maintain focus on domain problems."